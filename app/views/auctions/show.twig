<!DOCTYPE html>
<html lang="fr">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>{{ auction.nom }} - Stampee</title>
	<link rel="stylesheet" href="/projetweb2/public/css/base.css">
	<link rel="stylesheet" href="/projetweb2/public/css/variables.css">
	<link rel="stylesheet" href="/projetweb2/public/css/utilities.css">
	<link rel="stylesheet" href="/projetweb2/public/css/product-details.css">
	<link rel="stylesheet" href="/projetweb2/public/css/standardization.css">
	<link rel="stylesheet" href="/projetweb2/public/css/button.css">
	<link rel="stylesheet" href="/projetweb2/public/css/carousel.css">
	<link rel="stylesheet" href="/projetweb2/public/css/header.css">
	<link rel="stylesheet" href="/projetweb2/public/css/footer.css">
	<link rel="stylesheet" href="/projetweb2/public/css/forms.css">
	<link rel="stylesheet" href="/projetweb2/public/css/responsive.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&family=Playfair+Display:wght@700&display=swap" rel="stylesheet">
    <link rel="icon" href="/projetweb2/public/img/favicon/favicon.ico" sizes="any">
</head>
<body>
	<header class="header">
		<div class="header__content">
			<a href="/projetweb2/public/" class="header__logo-link">
				<img src="/projetweb2/public/img/redcrownlogo.png" alt="Red Crown Logo" class="header__logo">
			</a>
			<a href="/projetweb2/public/" class="header__title-link">
				<h1 class="header__title">Stampee Auction House</h1>
			</a>
			<nav class="header__nav">
				<ul class="header__nav-list">
					<li><a href="/projetweb2/public/auctions" class="header__nav-link">Enchères</a></li>
					<li><a href="/projetweb2/public/auctions/search" class="header__nav-link">Recherche Avancée</a></li>
					{% if session.authenticated %}
						<li><a href="/projetweb2/public/auctions/create" class="header__nav-link">Créer une Enchère</a></li>
					{% endif %}
				</ul>
			</nav>
			
			<!-- Simple Search Bar -->
			<div class="header__search">
				<form class="header__search-form" action="/projetweb2/public/auctions/search" method="GET">
					<input type="text" name="recherche" placeholder="Rechercher des timbres..." class="header__search-input">
					<button type="submit" class="header__search-btn" aria-label="Rechercher">
						<svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
							<path d="M21 21L16.514 16.506L21 21ZM19 10.5C19 15.194 15.194 19 10.5 19C5.806 19 2 15.194 2 10.5C2 5.806 5.806 2 10.5 2C15.194 2 19 5.806 19 10.5Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
						</svg>
					</button>
				</form>
			</div>
			<div class="header__actions">
				{% if session.authenticated %}
					<div class="header__user-dropdown">
						<button class="header__user-btn" aria-label="Menu utilisateur">
							<span class="header__user">Bonjour, {{ session.username }}</span>
							<svg class="header__dropdown-arrow" width="12" height="12" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
								<path d="M6 9L12 15L18 9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
							</svg>
						</button>
						                        <div class="header__dropdown-menu">
                            <a href="/projetweb2/public/profile" class="header__dropdown-item">Votre profil</a>
                            <a href="/projetweb2/public/auctions/favorites" class="header__dropdown-item">Mes Favoris</a>
                            <a href="/projetweb2/public/help" class="header__dropdown-item">Centre d'Aide</a>
                            <a href="/projetweb2/public/logout" class="header__dropdown-item">Déconnexion</a>
                        </div>
					</div>
				{% else %}
					<a href="/projetweb2/public/login" class="btn btn--secondary">Connexion</a>
					<a href="/projetweb2/public/register" class="btn btn--primary">Inscription</a>
				{% endif %}
			</div>
            
            <button class="header__nav-toggle" aria-label="Toggle navigation">
                <span></span>
                <span></span>
                <span></span>
            </button>
        </div>
    </header>

	<main>
	<div class="auction-details">
		<div class="auction-header">
			<h1 class="auction-title">{{ auction.nom }}</h1>
			<div class="auction-meta">
				<span class="country">{{ auction.pays_origine }}</span>
				<span class="condition">{{ auction.condition }}</span>
				{% if auction.certifie %}
					<span class="certified">✓ Certifié</span>
				{% endif %}
			</div>
		</div>

		<div class="auction-content">
			<div class="auction-images">
				{% if images and images|length > 0 %}
					<div class="image-carousel">
						<!-- Favorite button overlay -->
						{% if session.authenticated %}
							<button id="favoriteBtn" class="favorite-overlay-btn {{ isFavorite ? 'favorited' : '' }}" data-auction-id="{{ auction.id_enchere }}" aria-label="{% if isFavorite %}Retirer des favoris{% else %}Ajouter aux favoris{% endif %}">
								{% if isFavorite %}
									<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
										<path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
									</svg>
								{% else %}
									<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" xmlns="http://www.w3.org/2000/svg">
										<path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
									</svg>
								{% endif %}
							</button>
						{% endif %}
						
						<div class="carousel-container">
							{% for image in images %}
								<div class="carousel-slide {% if loop.first %}active{% endif %}" data-slide="{{ loop.index0 }}">
									<img src="/projetweb2/{{ image.chemin }}" alt="{{ auction.nom }} - Image {{ loop.index }}">
									<div class="zoom-overlay"></div>
									<div class="zoom-controls">
										<button class="zoom-btn zoom-reset" title="Reset zoom">⟲</button>
									</div>
								</div>
							{% endfor %}
						</div>
						
						{% if images|length > 1 %}
	
							<button class="carousel-nav carousel-prev" aria-label="Image précédente">‹</button>
							<button class="carousel-nav carousel-next" aria-label="Image suivante">›</button>
							

							<div class="carousel-indicators">
								{% for image in images %}
									<button class="indicator {% if loop.first %}active{% endif %}" data-slide="{{ loop.index0 }}" aria-label="Aller à l'image {{ loop.index }}"></button>
								{% endfor %}
							</div>
						{% endif %}
					</div>
				{% endif %}
			</div>

			<div class="auction-info">
				<div class="price-section">
					<h3>{% if auction.prix_actuel and auction.prix_actuel > 0 %}Prix Actuel{% else %}Prix de Départ{% endif %}</h3>
					<div class="current-price">{% if auction.prix_actuel and auction.prix_actuel > 0 %}{{ auction.prix_actuel }}{% else %}{{ auction.prix_plancher }}{% endif %} $</div>
					<div class="starting-price">Prix de départ: {{ auction.prix_plancher }} $</div>
					{% if auction.nombre_offres and auction.nombre_offres > 0 %}
						<div class="bid-count-display">{{ auction.nombre_offres }} offre{{ auction.nombre_offres > 1 ? 's' : '' }} reçue{{ auction.nombre_offres > 1 ? 's' : '' }}</div>
					{% endif %}
					
					{% if auction.date_fin %}
						<div class="auction-countdown">
							<h4>Temps Restant</h4>
							<div id="countdown" class="countdown-timer" data-end="{{ auction.date_fin }}">
								<span class="countdown-days">--</span>j
								<span class="countdown-hours">--</span>h
								<span class="countdown-minutes">--</span>m
								<span class="countdown-seconds">--</span>s
							</div>
						</div>
					{% endif %}
				</div>

			</div>
		</div>

		<!-- Centered Content Box -->
		<div class="auction-content-box">
			<div class="bidding-section">
				<h3>Placer une Offre</h3>
				{% if session.authenticated %}
					{% set current_time = 'now'|date('Y-m-d H:i:s') %}
					{% set auction_end = auction.date_fin|date('Y-m-d H:i:s') %}
					{% if auction.statut == 'Active' and auction_end > current_time %}
						<form id="bidForm" class="bid-form">
							<input type="hidden" id="auctionId" value="{{ auction.id_enchere }}">
							<div class="bid-input-group">
								<input type="number" id="bidAmount" step="0.01" min="{% if auction.prix_actuel and auction.prix_actuel > 0 %}{{ (auction.prix_actuel + 0.01) }}{% else %}{{ (auction.prix_plancher + 0.01) }}{% endif %}" placeholder="Montant de l'offre" required>
								<button type="submit" class="btn btn--primary">Enchérir</button>
							</div>
							<small>L'offre doit être supérieure au prix actuel</small>
						</form>
					{% else %}
						<div class="auction-ended">
							<p class="auction-status">Cette enchère est terminée</p>
							                        {% if auction.statut == 'Terminée' %}
								<p class="winner-info">
									{% if offres and offres|length > 0 %}
										Gagnant: {{ offres[0].nom_utilisateur }} avec {{ offres[0].montant }} $
									{% else %}
										Aucune offre reçue
									{% endif %}
								</p>
							{% endif %}
						</div>
					{% endif %}
				{% else %}
					<p>Connectez-vous pour enchérir</p>
					<a href="/projetweb2/public/login" class="btn btn--primary">Se Connecter</a>
				{% endif %}
			</div>



			<!-- Auction Info Tabs -->
			<div class="auction-info-tabs">
				<button class="tab-btn active" data-tab="details">Détails de l'Enchère</button>
				<button class="tab-btn" data-tab="history">Historique des Offres</button>
				<button class="tab-btn" data-tab="actions">Actions</button>
			</div>

			<!-- Details Tab -->
			<div class="tab-content active" id="details-tab">
				<div class="auction-details-info">
					<ul>
						<li><strong>Vendeur:</strong> {{ auction.vendeur_nom }}</li>
						<li><strong>Date de début:</strong> {{ auction.date_debut|date('d/m/Y H:i') }}</li>
						<li><strong>Date de fin:</strong> {{ auction.date_fin|date('d/m/Y H:i') }}</li>
						<li><strong>Nombre d'offres:</strong> {{ auction.nombre_offres }}</li>
						{% if auction.couleurs %}
							<li><strong>Couleurs:</strong> {{ auction.couleurs }}</li>
						{% endif %}
						{% if auction.tirage %}
							<li><strong>Tirage:</strong> {{ auction.tirage }}</li>
						{% endif %}
						{% if auction.dimensions %}
							<li><strong>Dimensions:</strong> {{ auction.dimensions }}</li>
						{% endif %}
					</ul>
				</div>
			</div>

			<!-- History Tab -->
			<div class="tab-content" id="history-tab">
				<div class="bids-history">
					{% if offres %}
						<div class="bids-list">
							{% for offre in offres %}
							<div class="bid-item">
								<span class="bid-amount">{{ offre.montant }} $</span>
								<span class="bid-user">{{ offre.nom_utilisateur }}</span>
								<span class="bid-date">{{ offre.date_offre|date('d/m/Y H:i') }}</span>
							</div>
							{% endfor %}
						</div>
					{% else %}
						<p>Aucune offre pour le moment</p>
					{% endif %}
				</div>
			</div>

			<!-- Actions Tab -->
			<div class="tab-content" id="actions-tab">
				<div class="actions-section">
					{% if session.authenticated %}
						<div class="action-buttons">
							{% if session.user_id == auction.id_membre %}
								<div class="owner-actions">
									<h4>Actions du propriétaire</h4>
									<a href="/projetweb2/public/auctions/{{ auction.id_enchere }}/edit" class="btn btn--primary">✏️ Modifier l'Enchère</a>
									<button class="btn btn--danger delete-auction-btn" data-auction-id="{{ auction.id_enchere }}">🗑️ Supprimer l'Enchère</button>
								</div>
							{% endif %}
							
							{% if session.user_id == 20 %}
								<div class="admin-actions">
									<h4>Actions Administrateur</h4>
									<button class="btn btn--secondary lord-favorite-toggle" 
											data-auction-id="{{ auction.id_enchere }}"
											data-current-status="{{ auction.coup_de_coeur_lord ? '1' : '0' }}"
											title="Toggle Coup de Cœur du Lord">
										{% if auction.coup_de_coeur_lord %}
											🗑️ Retirer des Coups de Cœur du Lord
										{% else %}
											⭐ Ajouter aux Coups de Cœur du Lord
										{% endif %}
									</button>
									<button class="btn btn--danger admin-delete-auction-btn" data-auction-id="{{ auction.id_enchere }}" title="Admin: Supprimer cette enchère">
										🗑️ Admin Delete
									</button>
								</div>
							{% endif %}
							
							<div class="user-actions">
								<h4>Actions utilisateur</h4>
								<button id="favoriteBtnTab" class="btn btn--secondary favorite-btn {{ isFavorite ? 'favorited' : '' }}" data-auction-id="{{ auction.id_enchere }}">
									{% if isFavorite %}
										❤️ Retirer des Favoris
									{% else %}
										🤍 Ajouter aux Favoris
									{% endif %}
								</button>
								
								<!-- Additional action buttons can be added here -->
								<button class="btn btn--secondary" onclick="window.print()">🖨️ Imprimer</button>
								<button class="btn btn--secondary" onclick="shareAuction()">📤 Partager</button>
							</div>
						</div>
					{% else %}
						<div class="login-prompt">
							<p>Connectez-vous pour accéder aux actions</p>
							<a href="/projetweb2/public/login" class="btn btn--primary">Se Connecter</a>
						</div>
					{% endif %}
				</div>
			</div>
		</div>
	</div>
	</main>



	<script>
		document.addEventListener('DOMContentLoaded', function() {
			// Mobile navigation toggle
			const navToggle = document.querySelector('.header__nav-toggle');
			const navList = document.querySelector('.header__nav-list');
			
			if (navToggle && navList) {
				navToggle.addEventListener('click', function() {
					navList.classList.toggle('active');
					this.classList.toggle('active');
				});
			}

			// Countdown timer functionality
			const countdownElement = document.getElementById('countdown');
			if (countdownElement) {
				// Parse the end date as a local date string to avoid timezone issues
				const endDateStr = countdownElement.dataset.end;
				const endDate = new Date(endDateStr).getTime(); // Parse as local time
				
				function updateCountdown() {
					const now = new Date().getTime();
					const distance = endDate - now;
					
					if (distance < 0) {
						// Auction has ended
						countdownElement.innerHTML = '<span class="auction-ended">Enchère terminée</span>';
						return;
					}
					
					// Calculate time units
					const days = Math.floor(distance / (1000 * 60 * 60 * 24));
					const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
					const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
					const seconds = Math.floor((distance % (1000 * 60)) / 1000);
					
					// Update display
					countdownElement.querySelector('.countdown-days').textContent = days;
					countdownElement.querySelector('.countdown-hours').textContent = hours.toString().padStart(2, '0');
					countdownElement.querySelector('.countdown-minutes').textContent = minutes.toString().padStart(2, '0');
					countdownElement.querySelector('.countdown-seconds').textContent = seconds.toString().padStart(2, '0');
					
					// Add urgency styling for last 24 hours
					if (distance < 24 * 60 * 60 * 1000) {
						countdownElement.classList.add('urgent');
					}
					
					// Add critical styling for last 1 hour
					if (distance < 60 * 60 * 1000) {
						countdownElement.classList.add('critical');
					}
				}
				
				// Update countdown every second
				updateCountdown();
				setInterval(updateCountdown, 1000);
			}

			// Carousel functionality
			const carousel = document.querySelector('.image-carousel');
			let autoSlideInterval;
			let currentSlide = 0;
			let totalSlides = 0;
			
			if (carousel) {
				const slides = carousel.querySelectorAll('.carousel-slide');
				const prevBtn = carousel.querySelector('.carousel-prev');
				const nextBtn = carousel.querySelector('.carousel-next');
				const indicators = carousel.querySelectorAll('.indicator');
				
				totalSlides = slides.length;
				
				// Function to show a specific slide
				function showSlide(index) {
					// Remove active class from all slides and indicators
					slides.forEach(slide => slide.classList.remove('active'));
					indicators.forEach(indicator => indicator.classList.remove('active'));
					
					// Add active class to current slide and indicator
					slides[index].classList.add('active');
					if (indicators[index]) {
						indicators[index].classList.add('active');
					}
					
					currentSlide = index;
				}
				
				// Function to go to next slide
				function nextSlide() {
					const nextIndex = (currentSlide + 1) % totalSlides;
					showSlide(nextIndex);
				}
				
				// Function to go to previous slide
				function prevSlide() {
					const prevIndex = (currentSlide - 1 + totalSlides) % totalSlides;
					showSlide(prevIndex);
				}
				
				// Event listeners for navigation buttons
				if (prevBtn) {
					prevBtn.addEventListener('click', prevSlide);
				}
				
				if (nextBtn) {
					nextBtn.addEventListener('click', nextSlide);
				}
				
				// Event listeners for indicators
				indicators.forEach((indicator, index) => {
					indicator.addEventListener('click', () => showSlide(index));
				});
				
				// Keyboard navigation
				document.addEventListener('keydown', function(e) {
					if (carousel.contains(document.activeElement) || carousel === document.activeElement) {
						if (e.key === 'ArrowLeft') {
							e.preventDefault();
							prevSlide();
						} else if (e.key === 'ArrowRight') {
							e.preventDefault();
							nextSlide();
						}
					}
				});
				
				// Auto-advance slides every 5 seconds (optional)
				if (totalSlides > 1) {
					autoSlideInterval = setInterval(nextSlide, 5000);
				}
			}

			// eBay-style Zoom Functionality
			const carouselSlides = document.querySelectorAll('.carousel-slide');
			
			carouselSlides.forEach((slide, index) => {
				const img = slide.querySelector('img');
				const resetBtn = slide.querySelector('.zoom-reset');
				let isZoomed = false;
				let isDragging = false;
				let hasDragged = false;
				let startX, startY, translateX = 0, translateY = 0;
				
				// Click to zoom in/out - FIXED VERSION
				img.addEventListener('click', (e) => {
					// Prevent zoom toggle if user was panning
					if (hasDragged) {
						hasDragged = false;
						return;
					}
					
					console.log(`Image ${index} clicked, isZoomed: ${isZoomed}`); // Debug log
					e.preventDefault();
					e.stopPropagation();
					
					if (!isZoomed) {
						// Zoom in
						img.classList.add('zoomed');
						slide.classList.add('zoomed');
						isZoomed = true;
						
						// Pause auto-slide
						if (autoSlideInterval) {
							clearInterval(autoSlideInterval);
							autoSlideInterval = null;
						}
						
						// Reset position
						translateX = 0;
						translateY = 0;
						img.style.transform = 'scale(2.5) translate(0px, 0px)';
						
						// Update cursor
						img.style.cursor = 'grab';
						
						console.log(`Image ${index} zoomed in`); // Debug log
					} else {
						// Zoom out
						img.classList.remove('zoomed');
						slide.classList.remove('zoomed');
						isZoomed = false;
						
						// Resume auto-slide
						if (totalSlides > 1 && !autoSlideInterval) {
							autoSlideInterval = setInterval(nextSlide, 5000);
						}
						
						// Reset position
						translateX = 0;
						translateY = 0;
						img.style.transform = 'scale(1) translate(0px, 0px)';
						
						// Update cursor
						img.style.cursor = 'zoom-in';
						
						console.log(`Image ${index} zoomed out`); // Debug log
					}
				});
				
				// Mouse move to pan around zoomed image - IMPROVED VERSION
				img.addEventListener('mousedown', (e) => {
					if (isZoomed) {
						e.preventDefault();
						e.stopPropagation();
						isDragging = true;
						hasDragged = false; // Reset drag flag on new mouse down
						startX = e.clientX - translateX;
						startY = e.clientY - translateY;
						img.style.cursor = 'grabbing';
					}
				});
				
				img.addEventListener('mousemove', (e) => {
					if (isZoomed) {
						e.preventDefault();
						e.stopPropagation();
						
						if (isDragging) {
							// Set flag that user has dragged (prevents click zoom toggle)
							hasDragged = true;
							
							// Calculate new position directly from mouse position
							translateX = e.clientX - startX;
							translateY = e.clientY - startY;
							
							// Limit panning to keep image visible
							const maxTranslateX = (img.offsetWidth * 0.75);
							const maxTranslateY = (img.offsetHeight * 0.75);
							
							translateX = Math.max(-maxTranslateX, Math.min(maxTranslateX, translateX));
							translateY = Math.max(-maxTranslateY, Math.min(maxTranslateY, translateY));
							
							// Apply transform
							img.style.transform = `scale(2.5) translate(${translateX}px, ${translateY}px)`;
						}
					}
				});
				
				img.addEventListener('mouseup', () => {
					if (isDragging) {
						isDragging = false;
						img.style.cursor = 'grab';
					}
				});
				
				img.addEventListener('mouseleave', () => {
					if (isDragging) {
						isDragging = false;
						img.style.cursor = 'grab';
					}
				});
				
				// Reset zoom button
				resetBtn.addEventListener('click', (e) => {
					e.preventDefault();
					e.stopPropagation();
					
					img.classList.remove('zoomed');
					slide.classList.remove('zoomed');
					isZoomed = false;
					
					// Resume auto-slide
					if (totalSlides > 1 && !autoSlideInterval) {
						autoSlideInterval = setInterval(nextSlide, 5000);
					}
					
					// Reset position
					translateX = 0;
					translateY = 0;
					img.style.transform = 'scale(1) translate(0px, 0px)';
					
					// Reset cursor
					img.style.cursor = 'zoom-in';
				});
				
				// Reset zoom when changing slides
				slide.addEventListener('transitionend', () => {
					if (!slide.classList.contains('active') && isZoomed) {
						img.classList.remove('zoomed');
						slide.classList.remove('zoomed');
						isZoomed = false;
						translateX = 0;
						translateY = 0;
						img.style.transform = 'scale(1) translate(0px, 0px)';
						
						// Reset cursor
						img.style.cursor = 'zoom-in';
					}
				});
			});

			// Enhanced Bidding functionality
			const bidForm = document.getElementById('bidForm');
			if (bidForm) {
				bidForm.addEventListener('submit', function(e) {
					e.preventDefault();
					
					const auctionId = document.getElementById('auctionId').value;
					const amount = document.getElementById('bidAmount').value;
					
					// Validate bid amount
					const currentPrice = parseFloat(document.querySelector('.current-price').textContent.replace('$', '').trim());
					if (parseFloat(amount) <= currentPrice) {
						alert('L\'offre doit être supérieure au prix actuel');
						return;
					}
					
					// Disable form during submission
					const submitBtn = this.querySelector('button[type="submit"]');
					const originalText = submitBtn.textContent;
					submitBtn.disabled = true;
					submitBtn.textContent = 'Envoi en cours...';
					
					fetch('/projetweb2/public/auctions/bid', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json',
						},
						body: JSON.stringify({
							auction_id: auctionId,
							montant: parseFloat(amount)
						})
					})
					.then(response => {
						console.log('Bid response status:', response.status);
						return response.text();
					})
					.then(text => {
						console.log('Bid response text:', text);
						try {
							const data = JSON.parse(text);
							console.log('Parsed bid data:', data);
							
							if (data.success) {
								alert(data.message);
								// Force a fresh reload to get updated data
								location.reload(true);
							} else {
								alert('Erreur: ' + data.error);
								// Re-enable form
								submitBtn.disabled = false;
								submitBtn.textContent = originalText;
							}
						} catch (parseError) {
							console.error('JSON parse error:', parseError);
							console.error('Raw bid response:', text);
							alert('Erreur de format de réponse du serveur');
							// Re-enable form
							submitBtn.disabled = false;
							submitBtn.textContent = originalText;
						}
					})
					.catch(error => {
						console.error('Network error:', error);
						alert('Erreur de connexion lors de la soumission de l\'offre');
						// Re-enable form
						submitBtn.disabled = false;
						submitBtn.textContent = originalText;
					});
				});
			}

			// Favorite functionality for both overlay and tab buttons
			function updateFavoriteButtons(isFavorite) {
				const overlayBtn = document.getElementById('favoriteBtn');
				const tabBtn = document.getElementById('favoriteBtnTab');
				
				if (overlayBtn) {
					if (isFavorite) {
						overlayBtn.innerHTML = '<svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg"><path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/></svg>';
						overlayBtn.classList.add('favorited');
					} else {
						overlayBtn.innerHTML = '<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" xmlns="http://www.w3.org/2000/svg"><path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/></svg>';
						overlayBtn.classList.remove('favorited');
					}
				}
				
				if (tabBtn) {
					if (isFavorite) {
						tabBtn.innerHTML = '❤️ Retirer des Favoris';
						tabBtn.classList.add('favorited');
					} else {
						tabBtn.innerHTML = '🤍 Ajouter aux Favoris';
						tabBtn.classList.remove('favorited');
					}
				}
			}
			
			function handleFavoriteClick(auctionId) {
				fetch('/projetweb2/public/auctions/favorite', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json',
					},
					body: JSON.stringify({
						auction_id: auctionId
					})
				})
				.then(response => {
					console.log('Response status:', response.status);
					console.log('Response headers:', response.headers);
					return response.text();
				})
				.then(text => {
					console.log('Response text:', text);
					try {
						const data = JSON.parse(text);
						console.log('Parsed data:', data);
						
						if (data.success) {
							updateFavoriteButtons(data.isFavorite);
						} else {
							alert('Erreur: ' + data.error);
						}
					} catch (parseError) {
						console.error('JSON parse error:', parseError);
						console.error('Raw response:', text);
						alert('Erreur de format de réponse du serveur');
					}
				})
				.catch(error => {
					console.error('Network error:', error);
					alert('Erreur de connexion lors de la mise à jour des favoris');
				});
			}
			
			// Add event listeners to both favorite buttons
			const overlayFavoriteBtn = document.getElementById('favoriteBtn');
			const tabFavoriteBtn = document.getElementById('favoriteBtnTab');
			
			if (overlayFavoriteBtn) {
				overlayFavoriteBtn.addEventListener('click', function() {
					handleFavoriteClick(this.dataset.auctionId);
				});
			}
			
			if (tabFavoriteBtn) {
				tabFavoriteBtn.addEventListener('click', function() {
					handleFavoriteClick(this.dataset.auctionId);
				});
			}

			// Delete auction functionality
			const deleteBtn = document.querySelector('.delete-auction-btn');
			if (deleteBtn) {
				deleteBtn.addEventListener('click', function() {
					const auctionId = this.dataset.auctionId;
					
					if (confirm('Êtes-vous sûr de vouloir supprimer cette enchère ? Cette action est irréversible.')) {
						fetch(`/projetweb2/public/auctions/${auctionId}/delete`, {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json',
							}
						})
						.then(response => response.json())
						.then(data => {
							if (data.success) {
								alert(data.message);
								window.location.href = '/projetweb2/public/auctions';
							} else {
								alert('Erreur: ' + data.error);
							}
						})
						.catch(error => {
							console.error('Error:', error);
							alert('Erreur lors de la suppression de l\'enchère');
						});
					}
				});
			}

			// Admin delete auction functionality
			const adminDeleteBtn = document.querySelector('.admin-delete-auction-btn');
			if (adminDeleteBtn) {
				adminDeleteBtn.addEventListener('click', function() {
					const auctionId = this.dataset.auctionId;
					
					if (confirm('Êtes-vous sûr de vouloir supprimer cette enchère en tant qu\'administrateur ? Cette action est irréversible.')) {
						fetch(`/projetweb2/public/auctions/${auctionId}/delete`, {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json',
							}
						})
						.then(response => response.json())
						.then(data => {
							if (data.success) {
								alert(data.message);
								window.location.href = '/projetweb2/public/auctions';
							} else {
								alert('Erreur: ' + data.error);
							}
						})
						.catch(error => {
							console.error('Error:', error);
							alert('Erreur lors de la suppression de l\'enchère');
						});
					}
				});
			}

			// Lord favorite toggle functionality for admins
			const lordFavoriteBtn = document.querySelector('.lord-favorite-toggle');
			if (lordFavoriteBtn) {
				lordFavoriteBtn.addEventListener('click', function() {
					const auctionId = this.dataset.auctionId;
					const currentStatus = this.dataset.currentStatus;
					
					fetch('/projetweb2/public/auctions/toggle-lord-favorite', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json',
						},
						body: JSON.stringify({
							auction_id: auctionId
						})
					})
					.then(response => response.json())
					.then(data => {
						if (data.success) {
							// Update button text and status
							if (currentStatus === '1') {
								this.innerHTML = '⭐ Ajouter aux Coups de Cœur du Lord';
								this.dataset.currentStatus = '0';
							} else {
								this.innerHTML = '🗑️ Retirer des Coups de Cœur du Lord';
								this.dataset.currentStatus = '1';
							}
							alert('Statut des Coups de Cœur du Lord mis à jour');
						} else {
							alert('Erreur: ' + data.error);
						}
					})
					.catch(error => {
						console.error('Error:', error);
						alert('Erreur lors de la mise à jour des Coups de Cœur du Lord');
					});
				});
			}
		});
		
		// Tab functionality for auction info
		const tabBtns = document.querySelectorAll('.tab-btn');
		const tabContents = document.querySelectorAll('.tab-content');

		tabBtns.forEach(btn => {
			btn.addEventListener('click', function() {
				const targetTab = this.dataset.tab;
				
				// Remove active class from all tabs and contents
				tabBtns.forEach(b => b.classList.remove('active'));
				tabContents.forEach(c => c.classList.remove('active'));
				
				// Add active class to clicked tab and corresponding content
				this.classList.add('active');
				document.getElementById(targetTab + '-tab').classList.add('active');
			});
		});

					// Share auction functionality
			window.shareAuction = function() {
				const auctionTitle = '{{ auction.nom }}';
				const auctionUrl = window.location.href;
				const shareText = `Découvrez cette enchère sur Stampee: ${auctionTitle}`;
				
				if (navigator.share) {
					// Use native sharing if available
					navigator.share({
						title: auctionTitle,
						text: shareText,
						url: auctionUrl
					}).catch(console.error);
				} else {
					// Fallback to copying to clipboard
					const shareData = `${shareText}\n${auctionUrl}`;
					navigator.clipboard.writeText(shareData).then(() => {
						alert('Lien de l\'enchère copié dans le presse-papiers!');
					}).catch(() => {
						// Fallback for older browsers
						const textArea = document.createElement('textarea');
						textArea.value = shareData;
						document.body.appendChild(textArea);
						textArea.select();
						document.execCommand('copy');
						document.body.removeChild(textArea);
						alert('Lien de l\'enchère copié dans le presse-papiers!');
					});
				}
			};
			
			// User dropdown functionality
			const userDropdown = document.querySelector('.header__user-dropdown');
			const userBtn = document.querySelector('.header__user-btn');
			const dropdownMenu = document.querySelector('.header__dropdown-menu');
		
		if (userDropdown && userBtn && dropdownMenu) {
			// Toggle dropdown on click for mobile
			userBtn.addEventListener('click', function(e) {
				e.preventDefault();
				dropdownMenu.classList.toggle('active');
			});
			
			// Close dropdown when clicking outside
			document.addEventListener('click', function(e) {
				if (!userDropdown.contains(e.target)) {
					dropdownMenu.classList.remove('active');
				}
			});
			
			// Handle window resize to reset dropdown state
			window.addEventListener('resize', function() {
				if (window.innerWidth > 768) {
					dropdownMenu.classList.remove('active');
				}
			});
		}
	</script>

	<footer class="footer">
		<div class="footer__content">
			<div class="footer__section">
				<h4 class="footer__subtitle">Liens Rapides</h4>
				<ul class="footer__links">
					<li><a href="/projetweb2/public/" class="footer__link">Accueil</a></li>
					<li><a href="/projetweb2/public/auctions" class="footer__link">Enchères</a></li>
					<li><a href="/projetweb2/public/auctions/create" class="footer__link">Créer une Enchère</a></li>
					<li><a href="/projetweb2/public/auctions/favorites" class="footer__link">Mes Favoris</a></li>
				</ul>
			</div>
			
			<div class="footer__section">
				<h4 class="footer__subtitle">Support</h4>
				<ul class="footer__links">
					<li><a href="#" class="footer__link">Centre d'Aide</a></li>
					<li><a href="#" class="footer__link">Contactez-nous</a></li>
					<li><a href="#" class="footer__link">FAQ</a></li>
					<li><a href="#" class="footer__link">Guide des Enchères</a></li>
				</ul>
			</div>
			
			<div class="footer__section">
				<h4 class="footer__subtitle">Légal</h4>
				<ul class="footer__links">
					<li><a href="#" class="footer__link">Conditions d'utilisation</a></li>
					<li><a href="#" class="footer__link">Politique de confidentialité</a></li>
					<li><a href="#" class="footer__link">Règles des enchères</a></li>
					<li><a href="#" class="footer__link">Protection des données</a></li>
				</ul>
			</div>
		</div>
		
		<div class="footer__bottom">
			<p class="footer__copyright">
				© 2024 Stampee Auction House. Tous droits réservés.
			</p>
		</div>
	</footer>
</body>
</html>
