<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stampee - Connexion</title>
    <link rel="stylesheet" href="/projetweb2/public/css/base.css">
    <link rel="stylesheet" href="/projetweb2/public/css/variables.css">
    <link rel="stylesheet" href="/projetweb2/public/css/utilities.css">
    <link rel="stylesheet" href="/projetweb2/public/css/button.css">
    <link rel="stylesheet" href="/projetweb2/public/css/forms.css">
    <link rel="stylesheet" href="/projetweb2/public/css/header.css">
    <link rel="stylesheet" href="/projetweb2/public/css/responsive.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&family=Playfair+Display:wght@700&display=swap" rel="stylesheet">
    <link rel="icon" href="/projetweb2/public/img/favicon/favicon.ico" sizes="any">
</head>
<body>
    <header class="header">
        <div class="header__content">
            <a href="/projetweb2/public/" class="header__logo-link">
                <img src="/projetweb2/public/img/redcrownlogo.png" alt="Red Crown Logo" class="header__logo">
            </a>
            <h1 class="header__title">Stampee Auction House</h1>
            
            <nav class="header__nav">
                <ul class="header__nav-list">
                    <li><a href="/projetweb2/public/" class="header__nav-link">Accueil</a></li>
                    <li><a href="/projetweb2/public/auctions" class="header__nav-link">Enchères</a></li>
                    <li><a href="#" class="header__nav-link">À propos</a></li>
                    <li><a href="#" class="header__nav-link">Contact</a></li>
                </ul>
            </nav>
            
            <div class="header__actions">
                <a href="/projetweb2/public/login" class="btn btn--secondary">Connexion</a>
                <a href="/projetweb2/public/register" class="btn btn--primary">Inscription</a>
            </div>
            
            <button class="header__nav-toggle" aria-label="Toggle navigation">
                <span></span>
                <span></span>
                <span></span>
            </button>
        </div>
    </header>

    <div class="login-container">
        <div class="login-form">
            <div class="login-header">
                <h1 class="login-title">Stampee</h1>
                <div class="login-subtitle">Connectez-vous à votre compte</div>
            </div>

            {% if errors.message %}
                <div class="error-message">
                    {{ errors.message }}
                </div>
            {% endif %}

            {% if success.message %}
                <div class="success-message">
                    {{ success.message }}
                </div>
            {% endif %}

            <form id="loginForm" action="/projetweb2/public/authenticate" method="post" novalidate>
                <div class="form-group">
                    <label for="nom_utilisateur" class="form-label">Nom d'utilisateur ou e-mail</label>
                    <input type="text" id="nom_utilisateur" name="nom_utilisateur" 
                           value="{{ old.nom_utilisateur ?? '' }}" 
                           class="form-input" required>
                    <div class="error-message" id="username-error"></div>
                </div>

                <div class="form-group">
                    <label for="mot_de_passe" class="form-label">Mot de passe</label>
                    <input type="password" id="mot_de_passe" name="mot_de_passe" 
                           class="form-input" required>
                    <div class="error-message" id="password-error"></div>
                </div>

                <button type="submit" class="btn btn--primary btn--full" id="submitBtn">Se connecter</button>
            </form>

            <div class="forgot-password">
                <a href="#">Mot de passe oublié ?</a>
            </div>

            <div class="register-link">
                Pas encore de compte ? <a href="/projetweb2/public/register">Inscrivez-vous ici</a>
            </div>
        </div>
    </div>

    <script>
        class LoginFormValidator {
            constructor(formId) {
                this.form = document.getElementById(formId);
                this.submitBtn = document.getElementById('submitBtn');
                this.errors = {};
                this.init();
            }

            init() {
                this.form.addEventListener('submit', (e) => this.handleSubmit(e));
                this.setupFieldValidation();
                this.setupRealTimeValidation();
            }

            setupFieldValidation() {
                const fields = this.form.querySelectorAll('input[required]');
                fields.forEach(field => {
                    field.addEventListener('blur', () => this.validateField(field));
                    field.addEventListener('input', () => this.clearFieldError(field));
                });
            }

            setupRealTimeValidation() {
                // Add real-time validation for better UX
                const usernameField = document.getElementById('nom_utilisateur');
                const passwordField = document.getElementById('mot_de_passe');
                
                usernameField.addEventListener('input', () => {
                    if (usernameField.value.trim()) {
                        this.validateField(usernameField);
                    }
                });
                
                passwordField.addEventListener('input', () => {
                    if (passwordField.value.trim()) {
                        this.validateField(passwordField);
                    }
                });
            }

            validateField(field) {
                const value = field.value.trim();
                const fieldName = field.name;
                let isValid = true;
                let errorMessage = '';

                // Required validation
                if (field.hasAttribute('required') && !value) {
                    isValid = false;
                    errorMessage = 'Ce champ est obligatoire.';
                }

                // Username/email validation
                if (fieldName === 'nom_utilisateur' && value) {
                    if (value.length < 2) {
                        isValid = false;
                        errorMessage = 'Le nom d\'utilisateur doit avoir au moins 2 caractères.';
                    } else if (value.length > 50) {
                        isValid = false;
                        errorMessage = 'Le nom d\'utilisateur ne peut pas dépasser 50 caractères.';
                    } else if (value.includes('@')) {
                        // Email validation
                        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                        if (!emailRegex.test(value)) {
                            isValid = false;
                            errorMessage = 'Veuillez entrer une adresse e-mail valide.';
                        }
                    }
                }

                // Password validation
                if (fieldName === 'mot_de_passe' && value) {
                    if (value.length < 6) {
                        isValid = false;
                        errorMessage = 'Le mot de passe doit avoir au moins 6 caractères.';
                    } else if (value.length > 128) {
                        isValid = false;
                        errorMessage = 'Le mot de passe ne peut pas dépasser 128 caractères.';
                    }
                }

                this.displayFieldError(field, isValid, errorMessage);
                return isValid;
            }

            displayFieldError(field, isValid, message) {
                const errorElement = document.getElementById(field.name + '-error');
                if (errorElement) {
                    if (!isValid) {
                        errorElement.textContent = message;
                        errorElement.style.display = 'block';
                        field.classList.add('error');
                        field.setAttribute('aria-invalid', 'true');
                    } else {
                        errorElement.textContent = '';
                        errorElement.style.display = 'none';
                        field.classList.remove('error');
                        field.setAttribute('aria-invalid', 'false');
                    }
                }
            }

            clearFieldError(field) {
                const errorElement = document.getElementById(field.name + '-error');
                if (errorElement) {
                    errorElement.textContent = '';
                    errorElement.style.display = 'none';
                    field.classList.remove('error');
                    field.setAttribute('aria-invalid', 'false');
                }
            }

            showGeneralError(message) {
                // Create or update general error message
                let generalError = document.getElementById('general-error');
                if (!generalError) {
                    generalError = document.createElement('div');
                    generalError.id = 'general-error';
                    generalError.className = 'error-message general-error';
                    this.form.insertBefore(generalError, this.form.firstChild);
                }
                generalError.textContent = message;
                generalError.style.display = 'block';
            }

            clearGeneralError() {
                const generalError = document.getElementById('general-error');
                if (generalError) {
                    generalError.style.display = 'none';
                }
            }

            handleSubmit(e) {
                console.log('Login form submission started');
                this.errors = {};
                let isValid = true;

                // Clear any previous general errors
                this.clearGeneralError();

                const requiredFields = this.form.querySelectorAll('input[required]');
                requiredFields.forEach(field => {
                    if (!this.validateField(field)) {
                        isValid = false;
                    }
                });

                if (!isValid) {
                    e.preventDefault();
                    this.submitBtn.disabled = false;
                    console.log('Form submission prevented due to validation errors');
                    this.showGeneralError('Veuillez corriger les erreurs dans le formulaire.');
                    return;
                }

                // Form is valid, allow submission
                console.log('Form validation passed, submitting...');
                this.submitBtn.disabled = true;
                this.submitBtn.textContent = 'Connexion en cours...';
                
                // Don't prevent default - let the form submit
            }
        }

        // Initialize form validation
        document.addEventListener('DOMContentLoaded', function() {
            new LoginFormValidator('loginForm');
            
            // Add visual feedback for form interactions
            const form = document.getElementById('loginForm');
            const inputs = form.querySelectorAll('input');
            
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.classList.add('focused');
                });
                
                input.addEventListener('blur', function() {
                    this.parentElement.classList.remove('focused');
                });
            });
        });
    </script>

    <script>
        // Mobile navigation toggle
        document.addEventListener('DOMContentLoaded', function() {
            const navToggle = document.querySelector('.header__nav-toggle');
            const navList = document.querySelector('.header__nav-list');
            
            if (navToggle && navList) {
                navToggle.addEventListener('click', function() {
                    navList.classList.toggle('active');
                    navToggle.classList.toggle('active');
                });
            }
        });
    </script>

    <footer class="footer">
        <div class="footer__content">
            <div class="footer__section">
                <h4 class="footer__subtitle">Liens Rapides</h4>
                <ul class="footer__links">
                    <li><a href="/projetweb2/public/" class="footer__link">Accueil</a></li>
                    <li><a href="/projetweb2/public/auctions" class="footer__link">Enchères</a></li>
                    <li><a href="/projetweb2/public/auctions/create" class="footer__link">Créer une Enchère</a></li>
                    <li><a href="/projetweb2/public/auctions/favorites" class="footer__link">Mes Favoris</a></li>
                </ul>
            </div>
            
            <div class="footer__section">
                <h4 class="footer__subtitle">Support</h4>
                <ul class="footer__links">
                    <li><a href="#" class="footer__link">Centre d'Aide</a></li>
                    <li><a href="#" class="footer__link">Contactez-nous</a></li>
                    <li><a href="#" class="footer__link">FAQ</a></li>
                    <li><a href="#" class="footer__link">Guide des Enchères</a></li>
                </ul>
            </div>
            
            <div class="footer__section">
                <h4 class="footer__subtitle">Légal</h4>
                <ul class="footer__links">
                    <li><a href="#" class="footer__link">Conditions d'utilisation</a></li>
                    <li><a href="#" class="footer__link">Politique de confidentialité</a></li>
                    <li><a href="#" class="footer__link">Règles des enchères</a></li>
                    <li><a href="#" class="footer__link">Protection des données</a></li>
                </ul>
            </div>
        </div>
        
        <div class="footer__bottom">
            <p class="footer__copyright">
                © 2024 Stampee Auction House. Tous droits réservés.
            </p>
        </div>
    </footer>
</body>
</html>
